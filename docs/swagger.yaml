basePath: /api
definitions:
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.User:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        maxLength: 100
        minLength: 2
        type: string
      id:
        type: string
      last_name:
        maxLength: 100
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
      phone:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone
    type: object
host: localhost:4000
info:
  contact: {}
  description: A Restaurant Service API in Go using Gin framework
  title: Restaurant Service API
  version: "1.0"
paths:
  /v1/users:
    get:
      description: Get a list of users with pagination.
      parameters:
      - description: Records per page (default is 10)
        in: query
        name: recordPerPage
        type: integer
      - description: Page number (default is 1)
        in: query
        name: page
        type: integer
      - description: Start index for slicing (default is 0)
        in: query
        name: startIndex
        type: integer
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Get All Users
      tags:
      - User
  /v1/users/{user_id}:
    get:
      description: Get a user's details by their ID.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Get a User by ID
      tags:
      - User
  /v1/users/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and generate access tokens.
      parameters:
      - description: User object to be created
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: User Login
      tags:
      - User
  /v1/users/signup:
    post:
      consumes:
      - application/json
      description: Create a new user account.
      parameters:
      - description: User object to be created
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Sign Up a new User
      tags:
      - User
swagger: "2.0"
